[2024.01.17 React에서 배열 사용하기 3 - 데이터 삭제하기]

DELETE

1. React에서 리스트 데이터 삭제하기
각 리스트 데이터에 삭제버튼을 만들고 클릭하면 삭제되도록 구현한다.

먼저 삭제버튼을 추가한다.

- DiaryItem.js
const DiaryItem = ({ author, content, created_date, emotion, id }) => {
    return (
        <div className="DiaryItem">
            <div className="info">
                <span>작성자 : {author} | 감정점수 : {emotion}</span>
                <br/>
                <span className="date">{new Date(created_date).toLocaleString()}</span>
            </div>
            <div className="content">{content}</div>
            <button
                onClick={() => {
                    console.log(id);
                }}
            >
                삭제하기
            </button>
        </div>
    );
};

export default DiaryItem;

삭제 버튼을 클릭하면 해당 리스트 데이터의 id 가 출력되는 것을 확인할 수 있다.

(삭제버튼 클릭시 id 출력)

삭제 버튼을 클릭하면 삭제되는 데이터 빼고 나머지 데이터들만 남도록 App.js 에서 설정이 필요하다. 이후 삭제하는 onDelete 함수를 props 로 DiaryList 컴포넌트에게 넘겨주고, DiaryList 컴포넌트는 다시 DiaryItem 컴포넌트에 넘겨준다(props 드릴링).
DiaryItem 컴포넌트에서 onDelete 함수에 삭제할 id 를 매개변수로 넘겨주면, App 컴포넌트에서 배열의 filter 내장함수를 사용하여 삭제할 id 값을 제외한 data 를 상태 변화 함수 매개변수로 넘겨 state 를 변경한다. 이후 리랜더링 되며 삭제한 id 를 제외한 리스트 데이터 목록만 보이게 된다.

- App.js
import { useRef, useState } from 'react';
import './App.css';
import DiaryEditor from './DiaryEditor';
import DiaryList from './DiaryList';

// 임시 배열 데이터
/*
const dummyList = [
    {
        id: 1
      , author: '송진성'
      , content: '하이 1'
      , emotion: 5
      , created_date: new Date().getTime() // 현재 시간 기준 생성됨, getTime() : 시간을 밀리세컨트로 돌려줌
    }
  , {
        id: 2
      , author: '홍길동'
      , content: '하이 2'
      , emotion: 2
      , created_date: new Date().getTime()
    }
  , {
        id: 3
      , author: '아무개'
      , content: '하이 3'
      , emotion: 1
      , created_date: new Date().getTime()
    }
]
*/

function App() {

  const [data, setData] = useState([]); // 빈 배열로 시작 (일기가 없는 상태로 시작)

  const dataId = useRef(0);

  const onCreate = (author, content, emotion) => {
    const created_date = new Date().getTime();
    const newItem = {
      author,
      content,
      emotion,
      created_date,
      id: dataId.current
    }
    dataId.current += 1;
    setData([newItem, ...data]); // 위에서 부터 출력하기 위해 newItem, ...data 순서로 작성
  };

  const onDelete = (targetId) => {
    console.log(`${targetId}가 삭제되었습니다.`);
    const newDiaryList = data.filter((it) => it.id !== targetId); // targetId 를 포함하지 않은 배열
    setData(newDiaryList); // 데이터의 state 를 바꿈
  };

  return (
    <div className="App">
      <DiaryEditor onCreate={onCreate}/>
      <DiaryList diaryList={data} onDelete={onDelete} />
    </div>
  );
}

export default App;

- DiaryList.js
import DiaryItem from "./DiaryItem";

const DiaryList = ({ diaryList, onDelete }) => {
    return (
        <div className="DiaryList">
            <h2>일기 리스트</h2>
            <h4>{diaryList.length} 개의 일기가 있습니다.</h4>
            <div>
                {diaryList.map((it) => (
                    <DiaryItem key={it.id} {...it} onDelete={onDelete} />
                ))}
            </div>
        </div>
    );
};

DiaryList.defaultProps = {
    diaryList: []
}

export default DiaryList;

- DiaryItem.js
const DiaryItem = ({ author, content, created_date, emotion, id, onDelete }) => {
    return (
        <div className="DiaryItem">
            <div className="info">
                <span>작성자 : {author} | 감정점수 : {emotion}</span>
                <br/>
                <span className="date">{new Date(created_date).toLocaleString()}</span>
            </div>
            <div className="content">{content}</div>
            <button
                onClick={() => {
                    console.log(id);
                    if (window.confirm(`${id} 번째 일기를 정말 삭제하시겠습니까?`)) {
                        onDelete(id);
                    }
                }}
            >
                삭제하기
            </button>
        </div>
    );
};

export default DiaryItem;

(삭제버튼 클릭시 confirm)

(삭제 결과)


참고강의 : https://www.inflearn.com/course/%ED%95%9C%EC%9E%85-%EB%A6%AC%EC%95%A1%ED%8A%B8#